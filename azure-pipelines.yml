# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: tf-test

steps:
- script: |
    cd terraform/
    terraform init
  displayName: 'Pre run terraform init'

- task: AzureCLI@2
  inputs:
    azureSubscription: ARM_SUBSCRIPTION
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      echo "starting..."
      export ARM_SUBSCRIPTION_ID=$(az account show --query 'id' --output tsv)
      export subscription_id=$ARM_SUBSCRIPTION_ID
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_TENANT_ID=$tenantId
      cd test/
      go test -timeout 60m
  env:
    TF_VAR_cluster_name: $(TF_VAR_cluster_name)
    TF_VAR_location: $(TF_VAR_location)
  displayName: 'Run a go test'

- task: AzureCLI@2
  inputs:
    azureSubscription: ARM_SUBSCRIPTION
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      echo "starting..."
      export ARM_SUBSCRIPTION_ID=$(az account show --query 'id' --output tsv)
      export subscription_id=$ARM_SUBSCRIPTION_ID
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_TENANT_ID=$tenantId
      cd terraform/
      terraform plan -out=theplan
      terraform apply -auto-approve theplan
  env:
    TF_VAR_cluster_name: $(TF_VAR_cluster_name)
    TF_VAR_location: $(TF_VAR_location)
  displayName: 'Run Terraform'

- task: AzureCLI@2
  inputs:
    azureSubscription: ARM_SUBSCRIPTION
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      echo "starting..."
      export ARM_SUBSCRIPTION_ID=$(az account show --query 'id' --output tsv)
      export subscription_id=$ARM_SUBSCRIPTION_ID
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_TENANT_ID=$tenantId
      az aks get-credentials --name $TF_VAR_cluster_name --resource-group rg-aks-$TF_VAR_cluster_name-eastus
      kubectl get pods
  env:
    TF_VAR_cluster_name: $(TF_VAR_cluster_name)
    TF_VAR_location: $(TF_VAR_location)
  displayName: 'Validate AKS'

- task: AzureCLI@2
  inputs:
    azureSubscription: ARM_SUBSCRIPTION
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      echo "starting..."
      export ARM_SUBSCRIPTION_ID=$(az account show --query 'id' --output tsv)
      export subscription_id=$ARM_SUBSCRIPTION_ID
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_TENANT_ID=$tenantId
      cd terraform/
      terraform destroy -auto-approve
  env:
    TF_VAR_cluster_name: $(TF_VAR_cluster_name)
    TF_VAR_location: $(TF_VAR_location)
  displayName: 'Destroy All the Things'